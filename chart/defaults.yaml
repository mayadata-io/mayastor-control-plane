# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

mayastorCP:
  registry: ''
  tag: latest
  pullPolicy: Always
  logLevel: info

base:
  cache_poll_period: ''
  default_req_timeout: ''

  initContainers:
    enabled: true
    containers:
      - name: nats-probe
        image: busybox:latest
        command: [ 'sh', '-c', 'trap "exit 1" TERM; until nc -vz nats 4222; do echo "Waiting for nats..."; sleep 1; done;' ]
      - name: etcd-probe
        image: busybox:latest
        command: [ 'sh', '-c', 'trap "exit 1" TERM; until nc -vz mayastor-etcd 2379; do echo "Waiting for etcd..."; sleep 1; done;' ]

  imagePullSecrets:
    enabled: true
    secrets:
      - name: regcred

  jaeger:
    enabled: false
    initContainer: true
    agent:
      name: jaeger-agent
      port: 6831
      initContainer:
        - name: jaeger-probe
          image: busybox:latest
          command: [ 'sh', '-c', 'trap "exit 1" TERM; until nc -vz -u {{.Values.base.jaeger.agent.name}} {{.Values.base.jaeger.agent.port}}; do echo "Waiting for jaeger..."; sleep 1; done;' ]

  initRestContainer:
    enabled: true
    initContainer:
      - name: rest-probe
        image: busybox:latest
        command: ['sh', '-c', 'trap "exit 1" TERM; until nc -vz rest 8081; do echo "Waiting for REST API endpoint to become available"; sleep 1; done;']

operators:
  pool:
    resources:
      limits:
        cpu: "100m"
        memory: "32Mi"
      requests:
        cpu: "50m"
        memory: "16Mi"

jaeger-operator:
  name: "mayastor"
  crd:
    install: false
  jaeger:
    create: false
  rbac:
    clusterRole: true

core:
  resources:
    limits:
      cpu: "1000m"
      memory: "32Mi"
    requests:
      cpu: "500m"
      memory: "16Mi"

rest:
  resources:
    limits:
      cpu: "100m"
      memory: "64Mi"
    requests:
      cpu: "50m"
      memory: "32Mi"

csi:
  resources:
    limits:
      cpu: "32m"
      memory: "128Mi"
    requests:
      cpu: "16m"
      memory: "64Mi"

  nvme:
     # nvme_core module io timeout in seconds
     io_timeout: "30"
     io_timeout_enabled: true
